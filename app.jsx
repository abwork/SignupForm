import React from 'react';import ReactDOM from 'react-dom';import { Table } from 'reactstrap';import { Button } from 'reactstrap';import { Container, Row, Col, div} from 'reactstrap';import './node_modules/font-awesome/css/font-awesome.min.css'; class App extends React.Component {	constructor(props) {		super(props);		this.full_name = "";		this.email_address = "";		this.phone_number = "";		this.addData = this.addData.bind(this);		this.editData = this.editData.bind(this);		this.cancelEditData = this.cancelEditData.bind(this);		this.updateData = this.updateData.bind(this);		this.deleteData = this.deleteData.bind(this);		this.sortByName = this.sortByName.bind(this);		this.sortByEMail = this.sortByEMail.bind(this);		this.sortByPNum = this.sortByPNum.bind(this);		this.state = {		    data: [		    	{index: 0, full_name: "John Doe", email_address: "john@example.com", phone_number: "4224-4224-2234"},		    	{index: 1, full_name: "Jane Doe", email_address: "jane@example.com", phone_number: "0234-4224-2234"},		    	{index: 2, full_name: "Chris", email_address: "chris@example.com", phone_number: "0234-4224-2234"},		    	{index: 3, full_name: "Chai", email_address: "chai@example.com", phone_number: "0234-4224-2234"},		    	{index: 4, full_name: "Abdi", email_address: "abdi@example.com", phone_number: "0234-4224-2234"},		    	{index: 5, full_name: "John Doe", email_address: "john@example.com", phone_number: "0234-4224-4224"},		    	{index: 5, full_name: "John Abdi", email_address: "john@example.com", phone_number: "0234-4224-2234"},		    	{index: 6, full_name: "Abdi Doe", email_address: "abdi@example.com", phone_number: "0234-4224-2234"},		    	{index: 7, full_name: "Chai Doe", email_address: "chai@Chai.com", phone_number: "0234-4224-2234"},		    	{index: 8, full_name: "Chris", email_address: "chris@example.com", phone_number: "4224-4224-2234"},		    	{index: 9, full_name: "John Doe", email_address: "john@example.com", phone_number: "2234-4224-2234"},		    	{index: 10, full_name: "John Chai", email_address: "chai@example.com", phone_number: "0234-4224-2234"},		    	{index: 11, full_name: "Chris Doe", email_address: "john@example.com", phone_number: "0234-4224-2234"},		    	{index: 12, full_name: "Abdi Doe", email_address: "abdi@Chai.com", phone_number: "2234-2234-2234"},		    	{index: 13, full_name: "John Chris", email_address: "john@example.com", phone_number: "0234-4224-2234"},		    	{index: 14, full_name: "John Volta", email_address: "volta@example.com", phone_number: "0234-4224-2234"},		    	{index: 15, full_name: "John Doe", email_address: "john@example.com", phone_number: "0234-4224-2234"},		    	{index: 16, full_name: "John Chai", email_address: "john@example.com", phone_number: "0234-4224-2234"},		    	{index: 17, full_name: "John Doe", email_address: "john@example.com", phone_number: "2234-4224-2234"},		    	{index: 18, full_name: "John Doe", email_address: "john@example.com", phone_number: "4224-4224-2234"},		    	{index: 19, full_name: "John Doe", email_address: "john@example.com", phone_number: "0234-4224-4224"}		    ]		  }	}	addData(){		this.full_name = $("#full_name").val();		this.email_address = $("#email_address").val();		this.phone_number = $("#phone_number").val();		var cnt_tr = ($("tr").length - 1) / 2;		this.state.data.push({index: cnt_tr, full_name: this.full_name, email_address: this.email_address, phone_number: this.phone_number});		this.setState({		});	}	editData(id){				let $tr = $(this.props.elems[id]);		let $editTr = $tr.next();		console.log(id);		$tr.addClass("hide_tr").removeClass("show_tr");		$editTr.addClass("show_tr").removeClass("hide_tr");		$editTr.find("#edit_full_name").val($tr.children("td")[0].innerHTML);		$editTr.find("#edit_email_address").val($tr.children("td")[1].innerHTML);		$editTr.find("#edit_phone_number").val($tr.children("td")[2].innerHTML);	}	cancelEditData(id){		let $tr = $(this.props.elems[id]);		let $editTr = $tr.next();		$tr.addClass("show_tr").removeClass("hide_tr");		$editTr.addClass("hide_tr").removeClass("show_tr");	}	updateData(id){		let $tr = $(this.props.elems[id]);		let $editTr = $tr.next();		$tr.addClass("show_tr").removeClass("hide_tr");		$editTr.addClass("hide_tr").removeClass("show_tr");		var fName = $editTr.find("#edit_full_name").val();		var eMail = $editTr.find("#edit_email_address").val();		var pNum = $editTr.find("#edit_phone_number").val();		$tr.children("td")[0].innerHTML = fName;		$tr.children("td")[1].innerHTML = eMail;		$tr.children("td")[2].innerHTML = pNum;		var del_element;		this.state.data.forEach(function(val, arr_id) {			if (val.index == id){				val.full_name = fName;				val.email_address = eMail;				val.phone_number = pNum;			}					});	}	deleteData(id){		var del_element;		this.state.data.forEach(function(val, arr_id) {			if (val.index == id)				del_element = arr_id;			if(val.index > id)				val.index --;		});		this.state.data.splice(del_element, 1);		console.log(this.state.data);		this.setState({		});	}	sortByName(){		this.state.data.sort(function(a, b){	        var x = a.full_name.toLowerCase();	        var y = b.full_name.toLowerCase();	        if (x < y) {return -1;}	        if (x > y) {return 1;}	        return 0;	    });	    this.setState({		});	}	sortByEMail(){		this.state.data.sort(function(a, b){	        var x = a.email_address.toLowerCase();	        var y = b.email_address.toLowerCase();	        if (x < y) {return -1;}	        if (x > y) {return 1;}	        return 0;	    });	    this.setState({		});	}	sortByPNum(){		this.state.data.sort(function(a, b){	        var x = a.phone_number.toLowerCase();	        var y = b.phone_number.toLowerCase();	        if (x < y) {return -1;}	        if (x > y) {return 1;}	        return 0;	    });	    this.setState({		});	}	render() {		return (			<div className="col-md-12">				<div className="col-md-12 crud_heading">					<div className="col-md-12 crud_heading_img">						<img src="nord-soft-logo.png" />					</div>				</div>				<div className="col-md-12 crud_body">					<div className="crud_subtitle">						List of participants					</div>					<div className="crud_add_panel">						<input placeholder="Full name" size="22" type="text" id="full_name" className="crud_input" />						<input placeholder="E-mail address" size="28" type="text" id="email_address" className="crud_input" />						<input placeholder="Phone number" size="22" id="phone_number" className="crud_input" />						<Button id="add_btn" className="crud_btn" value="Add new" onClick={this.addData}>Add new</Button>{''}					</div>					<div className="form-group crud_tbl_panel">							<Table>				        <thead>					        <tr className="crud_tbl_hd">					        	<td className="th_padding point_cursor" onClick={this.sortByName}>Name<i className="fa fa-arrow-down"></i></td>					            <td className="th_padding point_cursor" onClick={this.sortByEMail}>E-mail address</td>					            <td className="th_padding point_cursor" onClick={this.sortByPNum}>Phone number</td>					            <td className="th_padding"></td>					        </tr>				        </thead>	        {this.state.data.map(d => {	           return(				        <tbody key={d.index} id="tbody">			              <tr id="save_pan" className="crud_tbl_bd" ref={(elem) => {			              	this.props.elems[d.index] = elem;			              }}>			            <td className="td_padding">{d.full_name}</td>	                    <td className="td_padding">{d.email_address}</td>	                    <td className="td_padding">{d.phone_number}</td>	                    <td className="td_padding">	                      <div className="col-md-7">&nbsp;</div>	                      <div className="col-md-2 crud_ico point_cursor" onClick={() => this.editData(d.index)}><i className="fa fa-pencil"></i></div>	                      <div className="col-md-2 crud_ico point_cursor" onClick={() => this.deleteData(d.index)}><i className="fa fa-trash"></i></div>	                    </td>	                  </tr>	                  <tr id="edit_pan" className="crud_tbl_panel hide_tr">	                      <td>	                      	<input placeholder="Full name" type="text" id="edit_full_name" className="crud_input" />	                      </td>	                      <td>	                        <input placeholder="E-mail address" type="text" id="edit_email_address" className="crud_input" />	                      </td>	                      <td>	                        <input placeholder="Phone number" type="text" id="edit_phone_number" className="crud_input" />	                      </td>	                      <td className="th_padding">	                        <Button id="cancel_btn" className="crud_cancelbtn" onClick={() => this.cancelEditData(d.index)}>Cancel</Button>	                        <Button id="save_btn" className="crud_savebtn" onClick={() => this.updateData(d.index)}>Save</Button>	                      </td>	                  </tr>		            </tbody>		       		)}					)}					    </Table>					</div>				</div>			</div>			);	}}App.defaultProps = {	elems: {}}export default App;